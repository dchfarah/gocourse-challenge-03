// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"database/sql"
	"github.com/dchfarah/gocourse-challenge-03/internal/entity"
	"github.com/dchfarah/gocourse-challenge-03/internal/event"
	"github.com/dchfarah/gocourse-challenge-03/internal/infra/database"
	"github.com/dchfarah/gocourse-challenge-03/internal/infra/web/handlers"
	"github.com/dchfarah/gocourse-challenge-03/internal/usecase"
	"github.com/dchfarah/gocourse-challenge-03/pkg/events"
	"github.com/google/wire"
)

import (
	_ "github.com/go-sql-driver/mysql"
)

// Injectors from wire.go:

func NewCreateOrderUseCase(db *sql.DB, eventDispatcher events.EventDispatcherInterface) *usecase.CreateOrderUseCase {
	orderRepository := database.NewOrderRepository(db)
	orderCreated := event.NewOrderCreated()
	createOrderUseCase := usecase.NewCreateOrderUseCase(orderRepository, orderCreated, eventDispatcher)
	return createOrderUseCase
}

func NewListOrdersUseCase(db *sql.DB, eventDispatcher events.EventDispatcherInterface) *usecase.ListOrdersUseCase {
	orderRepository := database.NewOrderRepository(db)
	ordersListed := event.NewOrdersListed()
	listOrdersUseCase := usecase.NewListOrdersUseCase(orderRepository, ordersListed, eventDispatcher)
	return listOrdersUseCase
}

func NewWebCreateOrderHandler(db *sql.DB, eventDispatcher events.EventDispatcherInterface) *handlers.WebCreateOrderHandler {
	orderRepository := database.NewOrderRepository(db)
	orderCreated := event.NewOrderCreated()
	webCreateOrderHandler := handlers.NewWebCreateOrderHandler(eventDispatcher, orderRepository, orderCreated)
	return webCreateOrderHandler
}

func NewWebListOrdersHandler(db *sql.DB, eventDispatcher events.EventDispatcherInterface) *handlers.WebListOrdersHandler {
	orderRepository := database.NewOrderRepository(db)
	ordersListed := event.NewOrdersListed()
	webListOrdersHandler := handlers.NewWebListOrdersHandler(eventDispatcher, orderRepository, ordersListed)
	return webListOrdersHandler
}

// wire.go:

var setOrderRepositoryDependency = wire.NewSet(database.NewOrderRepository, wire.Bind(new(entity.OrderRepositoryInterface), new(*database.OrderRepository)))

var setEventDispatcherDependency = wire.NewSet(events.NewEventDispatcher, setOrderCreatedEvent,
	setOrdersListedEvent, wire.Bind(new(events.EventInterface), new(*event.OrderCreated)), wire.Bind(new(events.EventDispatcherInterface), new(*events.EventDispatcher)),
)

var setOrderCreatedEvent = wire.NewSet(event.NewOrderCreated, wire.Bind(new(events.EventInterface), new(*event.OrderCreated)))

var setOrdersListedEvent = wire.NewSet(event.NewOrdersListed, wire.Bind(new(events.EventInterface), new(*event.OrdersListed)))
